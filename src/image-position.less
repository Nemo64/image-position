//noinspection CssOptimizeSimilarProperties
.image-contain,
.image-cover {
    width: 100%;
    height: 100%;
    // set center as a useful default for the position
    object-position: center;
    background-position: center;
    // repeating is something normal images do not do
    background-repeat: no-repeat;

    // If backgroundsize isn't supported, object-fit most likely isn't neither (and you probably are using ie 8)
    // In that case this will just ensure that the aspect ratio of the image is preserved.
    // Depending on the image, this still might break but it's better than stretched images.
    .no-backgroundsize & {
        height: auto;
    }

    // hide unscaled image, and ..
    visibility: hidden;
    // .. show again when objectfit natively supported or polyfill was applied or when its hopeless
    .objectfit &,
    .no-backgroundsize &,
    &.image-polyfill {
        visibility: visible;
    }

    // prevent padding as the behavior is different between background and object-position
    padding: 0 !important;

    // background images can't overflow and so shouldn't normal images
    overflow: hidden !important;
    
    // fixes firefox rendering issues for images displayed on top of canvas elements
    -moz-transform: translateZ(0);

    // create object positioning classes
    // these follow the bootstrap breakpoints for easy responsive styling
    .create-positioning (@type) {

        .create-position (@horizontal-name, @vertical-name) {
            &.@{type}-@{horizontal-name}-@{vertical-name} {
                object-position: @horizontal-name @vertical-name;
                background-position: @horizontal-name @vertical-name;
            }
        }

        .create-position(left, top);
        .create-position(left, center);
        .create-position(left, bottom);
        .create-position(center, top);
        .create-position(center, center);
        .create-position(center, bottom);
        .create-position(right, top);
        .create-position(right, center);
        .create-position(right, bottom);
    }

    .create-positioning(xs);

    @media (min-width: @screen-sm-min) {
        .create-positioning(sm);
    }

    @media (min-width: @screen-md-min) {
        .create-positioning(md);
    }

    @media (min-width: @screen-lg-min) {
        .create-positioning(lg);
    }
}

.image-contain {
    object-fit: contain;
    background-size: contain;
}

.image-cover {
    object-fit: cover;
    background-size: cover;
}
